{"id":"../node_modules/aws-amplify-react/dist/Widget/TextPicker.js","dependencies":[{"name":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Widget/TextPicker.js.map","includedInParent":true,"mtime":1552220008284},{"name":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/src/Widget/TextPicker.js","includedInParent":true,"mtime":1552220008284},{"name":"/home/pronoob/Desktop/SandBox/ReactSandBox/package.json","includedInParent":true,"mtime":1552220018357},{"name":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/package.json","includedInParent":true,"mtime":1552220008284},{"name":"react","loc":{"line":26,"column":22},"parent":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Widget/TextPicker.js","resolved":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/react/index.js"},{"name":"@aws-amplify/core","loc":{"line":27,"column":21},"parent":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Widget/TextPicker.js","resolved":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/@aws-amplify/core/lib/index.js"},{"name":"../AmplifyTheme","loc":{"line":28,"column":29},"parent":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Widget/TextPicker.js","resolved":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/AmplifyTheme.js"},{"name":"./Picker","loc":{"line":29,"column":23},"parent":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Widget/TextPicker.js","resolved":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Widget/Picker.js"}],"generated":{"js":"\"use strict\";\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar react_1 = require(\"react\");\nvar core_1 = require(\"@aws-amplify/core\");\nvar AmplifyTheme_1 = require(\"../AmplifyTheme\");\nvar Picker_1 = require(\"./Picker\");\nvar Container = {};\nvar PickerPreview = {\n    maxWidth: '100%'\n};\nvar logger = new core_1.ConsoleLogger('TextPicker');\nvar TextPicker = /** @class */ (function (_super) {\n    __extends(TextPicker, _super);\n    function TextPicker(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handlePick = _this.handlePick.bind(_this);\n        _this.state = {\n            previewText: props.previewText\n        };\n        return _this;\n    }\n    TextPicker.prototype.handlePick = function (data) {\n        var that = this;\n        var file = data.file, name = data.name, size = data.size, type = data.type;\n        var _a = this.props, preview = _a.preview, onPick = _a.onPick, onLoad = _a.onLoad;\n        if (onPick) {\n            onPick(data);\n        }\n        if (preview) {\n            var reader = new FileReader();\n            reader.onload = function (e) {\n                var text = e.target.result;\n                that.setState({ previewText: text });\n                if (onLoad) {\n                    onLoad(text);\n                }\n            };\n            reader.readAsText(file);\n        }\n    };\n    TextPicker.prototype.render = function () {\n        var preview = this.props.preview;\n        var previewText = this.state.previewText;\n        var title = this.props.title || 'Pick a File';\n        var theme = this.props.theme || AmplifyTheme_1.default;\n        var containerStyle = Object.assign({}, Container, theme.picker);\n        var previewStyle = Object.assign({}, PickerPreview, theme.pickerPreview, theme.halfHeight, (preview && preview !== 'hidden') ? {} : AmplifyTheme_1.default.hidden);\n        return (React.createElement(\"div\", { style: containerStyle },\n            previewText ? React.createElement(\"div\", { style: previewStyle },\n                React.createElement(\"pre\", { style: theme.pre }, previewText))\n                : null,\n            React.createElement(Picker_1.default, { title: title, accept: \"text/*\", theme: theme, onPick: this.handlePick })));\n    };\n    return TextPicker;\n}(react_1.Component));\nexports.default = TextPicker;\n"},"sourceMaps":{"js":{"version":3,"file":"TextPicker.js","sourceRoot":"","sources":["../../src/Widget/TextPicker.js"],"names":[],"mappings":";AAAA;;;;;;;;;;;GAWG;;;;;;;;;;;;AAEH,6BAA+B;AAC/B,+BAAkC;AAElC,0CAA4D;AAC5D,gDAA2C;AAC3C,mCAA8B;AAE9B,IAAM,SAAS,GAAG,EACjB,CAAC;AAEF,IAAM,aAAa,GAAG;IAClB,QAAQ,EAAE,MAAM;CACnB,CAAC;AAEF,IAAM,MAAM,GAAG,IAAI,oBAAM,CAAC,YAAY,CAAC,CAAC;AAExC;IAAwC,8BAAS;IAC7C,oBAAY,KAAK;QAAjB,YACI,kBAAM,KAAK,CAAC,SAOf;QALG,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAE7C,KAAI,CAAC,KAAK,GAAG;YACT,WAAW,EAAE,KAAK,CAAC,WAAW;SACjC,CAAC;;IACN,CAAC;IAED,+BAAU,GAAV,UAAW,IAAI;QACX,IAAM,IAAI,GAAG,IAAI,CAAC;QACV,IAAA,gBAAI,EAAE,gBAAI,EAAE,gBAAI,EAAE,gBAAI,CAAU;QAClC,IAAA,eAAwC,EAAtC,oBAAO,EAAE,kBAAM,EAAE,kBAAM,CAAgB;QAE/C,IAAI,MAAM,EAAE;YAAE,MAAM,CAAC,IAAI,CAAC,CAAC;SAAE;QAE7B,IAAI,OAAO,EAAE;YACT,IAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAChC,MAAM,CAAC,MAAM,GAAG,UAAS,CAAC;gBACtB,IAAM,IAAI,GAAI,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBAC9B,IAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;gBACrC,IAAI,MAAM,EAAE;oBAAE,MAAM,CAAC,IAAI,CAAC,CAAC;iBAAE;YACjC,CAAC,CAAC;YACF,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SAC3B;IACL,CAAC;IAED,2BAAM,GAAN;QACY,IAAA,4BAAO,CAAgB;QACvB,IAAA,oCAAW,CAAgB;QAEnC,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,aAAa,CAAC;QAEhD,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,sBAAY,CAAC;QAC/C,IAAM,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;QAClE,IAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAC9B,EAAE,EACF,aAAa,EACb,KAAK,CAAC,aAAa,EACnB,KAAK,CAAC,UAAU,EAChB,CAAC,OAAO,IAAI,OAAO,KAAK,QAAQ,CAAC,CAAA,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,sBAAY,CAAC,MAAM,CAC9D,CAAC;QAEF,OAAO,CACH,6BAAK,KAAK,EAAE,cAAc;YACpB,WAAW,CAAA,CAAC,CAAC,6BAAK,KAAK,EAAE,YAAY;gBACvB,6BAAK,KAAK,EAAE,KAAK,CAAC,GAAG,IAAG,WAAW,CAAO,CACtC;gBACP,CAAC,CAAC,IAAI;YAEnB,oBAAC,gBAAM,IACH,KAAK,EAAE,KAAK,EACZ,MAAM,EAAC,QAAQ,EACf,KAAK,EAAE,KAAK,EACZ,MAAM,EAAE,IAAI,CAAC,UAAU,GACzB,CACA,CACT,CAAC;IACN,CAAC;IACL,iBAAC;AAAD,CAAC,AA7DD,CAAwC,iBAAS,GA6DhD","sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { Component } from 'react';\n\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport AmplifyTheme from '../AmplifyTheme';\nimport Picker from './Picker';\n\nconst Container = {\n};\n\nconst PickerPreview = {\n    maxWidth: '100%'\n};\n\nconst logger = new Logger('TextPicker');\n\nexport default class TextPicker extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handlePick = this.handlePick.bind(this);\n\n        this.state = {\n            previewText: props.previewText\n        };\n    }\n\n    handlePick(data) {\n        const that = this;\n        const { file, name, size, type } = data;\n        const { preview, onPick, onLoad } = this.props;\n\n        if (onPick) { onPick(data); }\n\n        if (preview) {\n            const reader = new FileReader();\n            reader.onload = function(e) {\n                const text  = e.target.result;\n                that.setState({ previewText: text });\n                if (onLoad) { onLoad(text); }\n            };\n            reader.readAsText(file);\n        }\n    }\n\n    render() {\n        const { preview } = this.props;\n        const { previewText } = this.state;\n\n        const title = this.props.title || 'Pick a File';\n\n        const theme = this.props.theme || AmplifyTheme;\n        const containerStyle = Object.assign({}, Container, theme.picker);\n        const previewStyle = Object.assign(\n            {},\n            PickerPreview,\n            theme.pickerPreview,\n            theme.halfHeight,\n            (preview && preview !== 'hidden')? {} : AmplifyTheme.hidden\n        );\n\n        return (\n            <div style={containerStyle}>\n                { previewText? <div style={previewStyle}>\n                                <pre style={theme.pre}>{previewText}</pre>\n                              </div>\n                             : null\n                }\n                <Picker\n                    title={title}\n                    accept=\"text/*\"\n                    theme={theme}\n                    onPick={this.handlePick}\n                />\n            </div>\n        );\n    }\n}\n"]}},"error":null,"hash":"49cf63ec856c7497433bdb3c1824b828","cacheData":{"env":{}}}