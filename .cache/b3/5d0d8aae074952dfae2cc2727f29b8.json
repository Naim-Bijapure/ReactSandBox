{"id":"../node_modules/aws-amplify-react/dist/API/GraphQL/Connect.js","dependencies":[{"name":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/API/GraphQL/Connect.js.map","includedInParent":true,"mtime":1552220008284},{"name":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/src/API/GraphQL/Connect.js","includedInParent":true,"mtime":1552220008284},{"name":"/home/pronoob/Desktop/SandBox/ReactSandBox/package.json","includedInParent":true,"mtime":1552220018357},{"name":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/package.json","includedInParent":true,"mtime":1552220008284},{"name":"react","loc":{"line":48,"column":22},"parent":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/API/GraphQL/Connect.js","resolved":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/react/index.js"},{"name":"@aws-amplify/api","loc":{"line":49,"column":20},"parent":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/API/GraphQL/Connect.js","resolved":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/@aws-amplify/api/lib/index.js"}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar api_1 = require(\"@aws-amplify/api\");\nvar Connect = /** @class */ (function (_super) {\n    __extends(Connect, _super);\n    function Connect(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = _this.getInitialState();\n        _this.subSubscription = null;\n        return _this;\n    }\n    Connect.prototype.getInitialState = function () {\n        var query = this.props.query;\n        return {\n            loading: query && !!query.query,\n            data: {},\n            errors: [],\n            mutation: function () { return console.warn('Not implemented'); },\n        };\n    };\n    Connect.prototype.getDefaultState = function () {\n        return {\n            loading: false,\n            data: {},\n            errors: [],\n            mutation: function () { return console.warn('Not implemented'); },\n        };\n    };\n    Connect.prototype._fetchData = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, _b, _c, query, _d, variables, _e, _f, mutation, _g, mutationVariables, subscription, _h, onSubscriptionMsg, _j, data, mutationProp, errors, hasValidQuery, hasValidMutation, hasValidSubscription, response, err_1, subsQuery, subsVars, observable;\n            var _this = this;\n            return __generator(this, function (_k) {\n                switch (_k.label) {\n                    case 0:\n                        this._unsubscribe();\n                        this.setState({ loading: true });\n                        _a = this.props, _b = _a.query, _c = _b === void 0 ? {} : _b, query = _c.query, _d = _c.variables, variables = _d === void 0 ? {} : _d, _e = _a.mutation, _f = _e === void 0 ? {} : _e, mutation = _f.query, _g = _f.mutationVariables, mutationVariables = _g === void 0 ? {} : _g, subscription = _a.subscription, _h = _a.onSubscriptionMsg, onSubscriptionMsg = _h === void 0 ? function (prevData) { return prevData; } : _h;\n                        _j = this.getDefaultState(), data = _j.data, mutationProp = _j.mutation, errors = _j.errors;\n                        if (!api_1.default || typeof api_1.default.graphql !== 'function' || typeof api_1.default.getGraphqlOperationType !== 'function') {\n                            throw new Error('No API module found, please ensure @aws-amplify/api is imported');\n                        }\n                        hasValidQuery = query && api_1.default.getGraphqlOperationType(query) === 'query';\n                        hasValidMutation = mutation && api_1.default.getGraphqlOperationType(mutation) === 'mutation';\n                        hasValidSubscription = subscription && api_1.default.getGraphqlOperationType(subscription.query) === 'subscription';\n                        if (!hasValidQuery && !hasValidMutation && !hasValidSubscription) {\n                            console.warn('No query, mutation or subscription was specified');\n                        }\n                        if (!hasValidQuery) return [3 /*break*/, 4];\n                        _k.label = 1;\n                    case 1:\n                        _k.trys.push([1, 3, , 4]);\n                        data = null;\n                        return [4 /*yield*/, api_1.default.graphql({ query: query, variables: variables })];\n                    case 2:\n                        response = _k.sent();\n                        data = response.data;\n                        return [3 /*break*/, 4];\n                    case 3:\n                        err_1 = _k.sent();\n                        data = err_1.data;\n                        errors = err_1.errors;\n                        return [3 /*break*/, 4];\n                    case 4:\n                        if (hasValidMutation) {\n                            mutationProp = function (variables) { return __awaiter(_this, void 0, void 0, function () {\n                                var result;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0: return [4 /*yield*/, api_1.default.graphql({ query: mutation, variables: variables })];\n                                        case 1:\n                                            result = _a.sent();\n                                            this.forceUpdate();\n                                            return [2 /*return*/, result];\n                                    }\n                                });\n                            }); };\n                        }\n                        if (hasValidSubscription) {\n                            subsQuery = subscription.query, subsVars = subscription.variables;\n                            try {\n                                observable = api_1.default.graphql({ query: subsQuery, variables: subsVars });\n                                this.subSubscription = observable.subscribe({\n                                    next: function (_a) {\n                                        var data = _a.value.data;\n                                        var prevData = _this.state.data;\n                                        var newData = onSubscriptionMsg(prevData, data);\n                                        _this.setState({ data: newData });\n                                    },\n                                    error: function (err) { return console.error(err); },\n                                });\n                            }\n                            catch (err) {\n                                errors = err.errors;\n                            }\n                        }\n                        this.setState({ data: data, errors: errors, mutation: mutationProp, loading: false });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Connect.prototype._unsubscribe = function () {\n        if (this.subSubscription) {\n            this.subSubscription.unsubscribe();\n        }\n    };\n    Connect.prototype.componentDidMount = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this._fetchData();\n                return [2 /*return*/];\n            });\n        });\n    };\n    Connect.prototype.componentWillUnmount = function () {\n        this._unsubscribe();\n    };\n    Connect.prototype.componentDidUpdate = function (prevProps) {\n        var loading = this.state.loading;\n        var _a = this.props, newQueryObj = _a.query, newMutationObj = _a.mutation;\n        var prevQueryObj = prevProps.query, prevMutationObj = prevProps.mutation;\n        // query\n        var _b = newQueryObj || {}, newQuery = _b.query, newQueryVariables = _b.variables;\n        var _c = prevQueryObj || {}, prevQuery = _c.query, prevQueryVariables = _c.variables;\n        var queryChanged = prevQuery !== newQuery || JSON.stringify(prevQueryVariables) !== JSON.stringify(newQueryVariables);\n        // mutation\n        var _d = newMutationObj || {}, newMutation = _d.query, newMutationVariables = _d.variables;\n        var _e = prevMutationObj || {}, prevMutation = _e.query, prevMutationVariables = _e.variables;\n        var mutationChanged = prevMutation !== newMutation\n            || JSON.stringify(prevMutationVariables) !== JSON.stringify(newMutationVariables);\n        if (!loading && (queryChanged || mutationChanged)) {\n            this._fetchData();\n        }\n    };\n    Connect.prototype.render = function () {\n        var _a = this.state, data = _a.data, loading = _a.loading, mutation = _a.mutation, errors = _a.errors;\n        return this.props.children({ data: data, errors: errors, loading: loading, mutation: mutation }) || null;\n    };\n    return Connect;\n}(react_1.Component));\nexports.default = Connect;\n"},"sourceMaps":{"js":{"version":3,"file":"Connect.js","sourceRoot":"","sources":["../../../src/API/GraphQL/Connect.js"],"names":[],"mappings":"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","sourcesContent":["import regeneratorRuntime from 'regenerator-runtime/runtime';\nimport { Component } from 'react';\nimport API from '@aws-amplify/api';\n\n\n\nexport default class Connect extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = this.getInitialState();\n        this.subSubscription = null;\n    }\n\n    getInitialState() {\n        const { query } = this.props;\n        return {\n            loading: query && !!query.query,\n            data: {},\n            errors: [],\n            mutation: () => console.warn('Not implemented'),\n        };\n    }\n\n    getDefaultState() {\n        return {\n            loading: false,\n            data: {},\n            errors: [],\n            mutation: () => console.warn('Not implemented'),\n        };\n    }\n\n    async _fetchData() {\n        this._unsubscribe();\n        this.setState({ loading: true });\n\n        const {\n            query: { query, variables = {} } = {},\n            mutation: { query: mutation, mutationVariables = {} } = {},\n            subscription,\n            onSubscriptionMsg = (prevData) => prevData,\n        } = this.props;\n\n        let { data, mutation: mutationProp, errors } = this.getDefaultState();\n\n        if (!API || typeof API.graphql !== 'function' || typeof API.getGraphqlOperationType !== 'function') {\n            throw new Error('No API module found, please ensure @aws-amplify/api is imported');\n        }\n\n        const hasValidQuery = query && API.getGraphqlOperationType(query) === 'query';\n        const hasValidMutation = mutation && API.getGraphqlOperationType(mutation) === 'mutation';\n        const hasValidSubscription = subscription && API.getGraphqlOperationType(subscription.query) === 'subscription';\n\n        if (!hasValidQuery && !hasValidMutation && !hasValidSubscription) {\n            console.warn('No query, mutation or subscription was specified');\n        }\n\n        if (hasValidQuery) {\n            try {\n                data = null;\n\n                const response = await API.graphql({ query, variables });\n\n                data = response.data;\n            } catch (err) {\n                data = err.data;\n                errors = err.errors;\n            }\n        }\n\n        if (hasValidMutation) {\n            mutationProp = async (variables) => {\n                const result = await API.graphql({ query: mutation, variables });\n\n                this.forceUpdate();\n                return result;\n            };\n        }\n\n        if (hasValidSubscription) {\n            const { query: subsQuery, variables: subsVars } = subscription;\n\n            try {\n                const observable = API.graphql({ query: subsQuery, variables: subsVars });\n\n                this.subSubscription = observable.subscribe({\n                    next: ({ value: { data } }) => {\n                        const { data: prevData } = this.state;\n                        const newData = onSubscriptionMsg(prevData, data);\n                        this.setState({ data: newData });\n                    },\n                    error: err => console.error(err),\n                });\n            } catch (err) {\n                errors = err.errors;\n            }\n        }\n\n        this.setState({ data, errors, mutation: mutationProp, loading: false });\n    }\n\n    _unsubscribe() {\n        if (this.subSubscription) {\n            this.subSubscription.unsubscribe();\n        }\n    }\n\n    async componentDidMount() {\n        this._fetchData();\n    }\n\n    componentWillUnmount() {\n        this._unsubscribe();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { loading } = this.state;\n\n        const { query: newQueryObj, mutation: newMutationObj } = this.props;\n        const { query: prevQueryObj, mutation: prevMutationObj } = prevProps;\n\n        // query\n        const { query: newQuery, variables: newQueryVariables } = newQueryObj || {};\n        const { query: prevQuery, variables: prevQueryVariables } = prevQueryObj || {};\n        const queryChanged =\n            prevQuery !== newQuery || JSON.stringify(prevQueryVariables) !== JSON.stringify(newQueryVariables);\n\n        // mutation\n        const { query: newMutation, variables: newMutationVariables } = newMutationObj || {};\n        const { query: prevMutation, variables: prevMutationVariables } = prevMutationObj || {};\n        const mutationChanged =\n            prevMutation !== newMutation\n            || JSON.stringify(prevMutationVariables) !== JSON.stringify(newMutationVariables);\n\n        if (!loading && (queryChanged || mutationChanged)) {\n            this._fetchData();\n        }\n    }\n\n    render() {\n        const { data, loading, mutation, errors } = this.state;\n        return this.props.children({ data, errors, loading, mutation }) || null;\n    }\n}\n"]}},"error":null,"hash":"4b0616b6a93074fe50352c3848d47bfd","cacheData":{"env":{}}}