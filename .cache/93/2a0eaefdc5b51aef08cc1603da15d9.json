{"id":"../node_modules/aws-amplify-react/dist/XR/SumerianScene.js","dependencies":[{"name":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/XR/SumerianScene.js.map","includedInParent":true,"mtime":1552220008284},{"name":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/src/XR/SumerianScene.jsx","includedInParent":true,"mtime":1552220008284},{"name":"/home/pronoob/Desktop/SandBox/ReactSandBox/package.json","includedInParent":true,"mtime":1552223257578},{"name":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/package.json","includedInParent":true,"mtime":1552220008284},{"name":"react","loc":{"line":60,"column":20},"parent":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/XR/SumerianScene.js","resolved":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/react/index.js"},{"name":"@aws-amplify/xr","loc":{"line":61,"column":19},"parent":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/XR/SumerianScene.js","resolved":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/@aws-amplify/xr/lib/index.js"},{"name":"@aws-amplify/core","loc":{"line":62,"column":21},"parent":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/XR/SumerianScene.js","resolved":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/@aws-amplify/core/lib/index.js"},{"name":"./IconButton","loc":{"line":63,"column":27},"parent":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/XR/SumerianScene.js","resolved":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/XR/IconButton.js"},{"name":"./Loading","loc":{"line":64,"column":24},"parent":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/XR/SumerianScene.js","resolved":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/XR/Loading.js"},{"name":"@aws-amplify/ui","loc":{"line":65,"column":24},"parent":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/XR/SumerianScene.js","resolved":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/@aws-amplify/ui/dist/aws-amplify-ui.js"}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n * Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar React = require(\"react\");\nvar xr_1 = require(\"@aws-amplify/xr\");\nvar core_1 = require(\"@aws-amplify/core\");\nvar IconButton_1 = require(\"./IconButton\");\nvar Loading_1 = require(\"./Loading\");\nvar AmplifyUI = require(\"@aws-amplify/ui\");\nvar SCENE_CONTAINER_DOM_ID = 'scene-container-dom-id';\nvar SCENE_DOM_ID = 'scene-dom-id';\nvar logger = new core_1.ConsoleLogger('SumerianScene');\nvar SumerianScene = /** @class */ (function (_super) {\n    __extends(SumerianScene, _super);\n    function SumerianScene(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            showEnableAudio: false,\n            muted: false,\n            loading: true,\n            percentage: 0,\n            isFullscreen: false,\n            sceneError: null,\n            isVRPresentationActive: false\n        };\n        return _this;\n    }\n    SumerianScene.prototype.setStateAsync = function (state) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this.setState(state, resolve);\n        });\n    };\n    SumerianScene.prototype.componentDidMount = function () {\n        document.addEventListener('fullscreenchange', this.onFullscreenChange.bind(this));\n        document.addEventListener('webkitfullscreenchange', this.onFullscreenChange.bind(this));\n        document.addEventListener('mozfullscreenchange', this.onFullscreenChange.bind(this));\n        document.addEventListener('MSFullscreenChange', this.onFullscreenChange.bind(this));\n        this.loadAndSetupScene(this.props.sceneName, SCENE_DOM_ID);\n    };\n    SumerianScene.prototype.componentWillUnmount = function () {\n        document.removeEventListener('fullscreenchange', this.onFullscreenChange.bind(this));\n        document.removeEventListener('webkitfullscreenchange', this.onFullscreenChange.bind(this));\n        document.removeEventListener('mozfullscreenchange', this.onFullscreenChange.bind(this));\n        document.removeEventListener('MSFullscreenChange', this.onFullscreenChange.bind(this));\n    };\n    SumerianScene.prototype.loadAndSetupScene = function (sceneName, sceneDomId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var sceneOptions, e_1, sceneError;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.setStateAsync({ loading: true });\n                        sceneOptions = {\n                            progressCallback: function (progress) {\n                                var percentage = progress * 100;\n                                _this.setState({ percentage: percentage });\n                            }\n                        };\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, xr_1.default.loadScene(sceneName, sceneDomId, sceneOptions)];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_1 = _a.sent();\n                        sceneError = {\n                            displayText: 'Failed to load scene',\n                            error: e_1\n                        };\n                        logger.error(sceneError.displayText, sceneError.error);\n                        this.setStateAsync({ sceneError: sceneError });\n                        return [2 /*return*/];\n                    case 4:\n                        xr_1.default.start(sceneName);\n                        this.setStateAsync({\n                            muted: xr_1.default.isMuted(sceneName),\n                            isVRPresentationActive: xr_1.default.isVRPresentationActive(sceneName),\n                            loading: false\n                        });\n                        xr_1.default.onSceneEvent(sceneName, 'AudioEnabled', function () { return _this.setStateAsync({ showEnableAudio: false }); });\n                        xr_1.default.onSceneEvent(sceneName, 'AudioDisabled', function () { return _this.setStateAsync({ showEnableAudio: true }); });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    SumerianScene.prototype.setMuted = function (muted) {\n        if (this.state.showEnableAudio) {\n            xr_1.default.enableAudio(this.props.sceneName);\n            this.setState({ showEnableAudio: false });\n        }\n        xr_1.default.setMuted(this.props.sceneName, muted);\n        this.setState({ muted: muted });\n    };\n    SumerianScene.prototype.onFullscreenChange = function () {\n        var doc = document;\n        this.setState({ isFullscreen: doc.fullscreenElement !== null });\n    };\n    SumerianScene.prototype.maximize = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var sceneDomElement;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        sceneDomElement = document.getElementById(SCENE_CONTAINER_DOM_ID);\n                        return [4 /*yield*/, sceneDomElement.requestFullScreen()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    SumerianScene.prototype.minimize = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var doc;\n            return __generator(this, function (_a) {\n                doc = document;\n                if (doc.exitFullscreen) {\n                    doc.exitFullscreen();\n                }\n                else if (doc.mozCancelFullScreen) {\n                    doc.mozCancelFullScreen();\n                }\n                else if (doc.webkitExitFullscreen) {\n                    doc.webkitExitFullscreen();\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    SumerianScene.prototype.toggleVRPresentation = function () {\n        try {\n            if (this.state.isVRPresentationActive) {\n                xr_1.default.exitVR(this.props.sceneName);\n            }\n            else {\n                xr_1.default.enterVR(this.props.sceneName);\n            }\n        }\n        catch (e) {\n            logger.error('Unable to start/stop WebVR System: ' + e.message);\n            return;\n        }\n        this.setState({ isVRPresentationActive: !this.state.isVRPresentationActive });\n    };\n    SumerianScene.prototype.render = function () {\n        var _this = this;\n        var muteButton;\n        var enterOrExitVRButton;\n        var screenSizeButton;\n        if (xr_1.default.isSceneLoaded(this.props.sceneName)) {\n            if (this.state.showEnableAudio) {\n                muteButton = React.createElement(IconButton_1.default, { variant: \"sound-mute\", tooltip: \"The scene is muted. Click to unmute.\", onClick: function () { return _this.setMuted(false); }, autoShowTooltip: true });\n            }\n            else if (xr_1.default.isMuted(this.props.sceneName)) {\n                muteButton = React.createElement(IconButton_1.default, { variant: \"sound-mute\", tooltip: \"Unmute\", onClick: function () { return _this.setMuted(false); } });\n            }\n            else {\n                muteButton = React.createElement(IconButton_1.default, { variant: \"sound\", tooltip: \"Mute\", onClick: function () { return _this.setMuted(true); } });\n            }\n            if (xr_1.default.isVRCapable(this.props.sceneName)) {\n                if (this.state.isVRPresentationActive) {\n                    logger.info('VR Presentation Active');\n                    enterOrExitVRButton = React.createElement(IconButton_1.default, { variant: \"exit-vr\", tooltip: \"Exit VR\", onClick: function () { return _this.toggleVRPresentation(); } });\n                }\n                else {\n                    logger.info('VR Presentation Inactive');\n                    enterOrExitVRButton = React.createElement(IconButton_1.default, { variant: \"enter-vr\", tooltip: \"Enter VR\", onClick: function () { return _this.toggleVRPresentation(); } });\n                }\n            }\n            if (this.state.isFullscreen) {\n                screenSizeButton = React.createElement(IconButton_1.default, { variant: \"minimize\", tooltip: \"Exit Fullscreen\", onClick: function () { return _this.minimize(); } });\n            }\n            else {\n                screenSizeButton = React.createElement(IconButton_1.default, { variant: \"maximize\", tooltip: \"Fullscreen\", onClick: function () { return _this.maximize(); } });\n            }\n        }\n        return (React.createElement(\"div\", { id: SCENE_CONTAINER_DOM_ID, className: AmplifyUI.sumerianSceneContainer },\n            React.createElement(\"div\", { id: SCENE_DOM_ID, className: AmplifyUI.sumerianScene }, this.state.loading && React.createElement(Loading_1.default, { sceneName: this.props.sceneName, percentage: this.state.percentage, sceneError: this.state.sceneError })),\n            React.createElement(\"div\", { className: AmplifyUI.sceneBar },\n                React.createElement(\"span\", { className: AmplifyUI.sceneActions },\n                    muteButton,\n                    enterOrExitVRButton,\n                    screenSizeButton))));\n    };\n    return SumerianScene;\n}(React.Component));\nexports.default = SumerianScene;\n"},"sourceMaps":{"js":{"version":3,"file":"SumerianScene.js","sourceRoot":"","sources":["../../src/XR/SumerianScene.jsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport * as React from 'react';\nimport XR from '@aws-amplify/xr';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport IconButton from './IconButton';\nimport Loading from './Loading';\nimport * as AmplifyUI from '@aws-amplify/ui';\n\nconst SCENE_CONTAINER_DOM_ID = 'scene-container-dom-id';\nconst SCENE_DOM_ID = 'scene-dom-id';\n\nconst logger = new Logger('SumerianScene');\n\nclass SumerianScene extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showEnableAudio: false,\n      muted: false,\n      loading: true,\n      percentage: 0,\n      isFullscreen: false,\n      sceneError: null,\n      isVRPresentationActive: false\n    };\n  }\n\n  setStateAsync(state) {\n    return new Promise((resolve) => {\n      this.setState(state, resolve)\n    });\n  }\n\n  componentDidMount() {\n    document.addEventListener('fullscreenchange', this.onFullscreenChange.bind(this));\n    document.addEventListener('webkitfullscreenchange', this.onFullscreenChange.bind(this));\n    document.addEventListener('mozfullscreenchange', this.onFullscreenChange.bind(this));\n    document.addEventListener('MSFullscreenChange', this.onFullscreenChange.bind(this));\n\n    this.loadAndSetupScene(this.props.sceneName, SCENE_DOM_ID)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('fullscreenchange', this.onFullscreenChange.bind(this));\n    document.removeEventListener('webkitfullscreenchange', this.onFullscreenChange.bind(this));\n    document.removeEventListener('mozfullscreenchange', this.onFullscreenChange.bind(this));\n    document.removeEventListener('MSFullscreenChange', this.onFullscreenChange.bind(this));\n  }\n  \n  async loadAndSetupScene(sceneName, sceneDomId) {\n    this.setStateAsync({ loading: true });\n    const sceneOptions = { \n      progressCallback: (progress) => {\n        const percentage = progress * 100;\n        this.setState({ percentage });\n      }\n    };\n    try {\n      await XR.loadScene(sceneName, sceneDomId, sceneOptions);\n    } catch (e) {\n      const sceneError = {\n        displayText: 'Failed to load scene',\n        error: e\n      }\n      logger.error(sceneError.displayText, sceneError.error);\n      this.setStateAsync({sceneError});\n      return;\n    }\n    \n    XR.start(sceneName);\n\n    this.setStateAsync({ \n      muted: XR.isMuted(sceneName),\n      isVRPresentationActive: XR.isVRPresentationActive(sceneName),\n      loading: false\n    });\n\n    XR.onSceneEvent(sceneName, 'AudioEnabled', () => this.setStateAsync({showEnableAudio: false}));\n    XR.onSceneEvent(sceneName, 'AudioDisabled', () => this.setStateAsync({showEnableAudio: true}));\n  }\n  \n  setMuted(muted) {\n    if (this.state.showEnableAudio) {\n      XR.enableAudio(this.props.sceneName);\n      this.setState({showEnableAudio: false});\n    }\n\n    XR.setMuted(this.props.sceneName, muted);\n    this.setState({ muted: muted });\n  }\n\n  onFullscreenChange() {\n    const doc = document;\n    this.setState({ isFullscreen: doc.fullscreenElement !== null });\n  }\n\n  async maximize() {\n    const sceneDomElement = document.getElementById(SCENE_CONTAINER_DOM_ID);\n    await sceneDomElement.requestFullScreen();\n  }\n\n  async minimize() {\n    const doc = document;\n    if(doc.exitFullscreen) {\n      doc.exitFullscreen();\n    } else if(doc.mozCancelFullScreen) {\n      doc.mozCancelFullScreen();\n    } else if(doc.webkitExitFullscreen) {\n      doc.webkitExitFullscreen();\n    }\n  }\n\n  toggleVRPresentation() {\n    try {\n      if (this.state.isVRPresentationActive) {\n        XR.exitVR(this.props.sceneName);\n      } else {\n        XR.enterVR(this.props.sceneName);\n      }\n    } catch(e) {\n      logger.error('Unable to start/stop WebVR System: ' + e.message);\n      return;\n    }\n    this.setState({isVRPresentationActive: !this.state.isVRPresentationActive});\n  }\n\n  render() {\n    let muteButton;\n    let enterOrExitVRButton;\n    let screenSizeButton;\n\n    if (XR.isSceneLoaded(this.props.sceneName)) {\n      if (this.state.showEnableAudio) {\n        muteButton = <IconButton variant=\"sound-mute\" tooltip=\"The scene is muted. Click to unmute.\" onClick={() => this.setMuted(false)} autoShowTooltip />\n      } else if (XR.isMuted(this.props.sceneName)) {\n        muteButton = <IconButton variant=\"sound-mute\" tooltip=\"Unmute\" onClick={() => this.setMuted(false)} />\n      } else {\n        muteButton = <IconButton variant=\"sound\" tooltip=\"Mute\" onClick={() => this.setMuted(true)} />\n      }\n\n      if (XR.isVRCapable(this.props.sceneName)) {\n        if (this.state.isVRPresentationActive) {\n          logger.info('VR Presentation Active');\n          enterOrExitVRButton = <IconButton variant=\"exit-vr\" tooltip=\"Exit VR\" onClick={() => this.toggleVRPresentation()} />\n        } else {\n          logger.info('VR Presentation Inactive');\n          enterOrExitVRButton = <IconButton variant=\"enter-vr\" tooltip=\"Enter VR\" onClick={() => this.toggleVRPresentation()} />\n        }\n      }\n\n      if (this.state.isFullscreen) {\n        screenSizeButton = <IconButton variant=\"minimize\" tooltip=\"Exit Fullscreen\" onClick={() => this.minimize()} />\n      } else {\n        screenSizeButton = <IconButton variant=\"maximize\" tooltip=\"Fullscreen\" onClick={() => this.maximize()} />\n      }\n    }\n\n    return (\n      <div id={SCENE_CONTAINER_DOM_ID} className={AmplifyUI.sumerianSceneContainer}>\n        <div id={SCENE_DOM_ID} className={AmplifyUI.sumerianScene}>\n          {this.state.loading && <Loading sceneName={this.props.sceneName} percentage={this.state.percentage} sceneError={this.state.sceneError}/>}\n        </div>\n        <div className={AmplifyUI.sceneBar}>\n          <span className={AmplifyUI.sceneActions}>\n            {muteButton}\n            {enterOrExitVRButton}\n            {screenSizeButton}\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SumerianScene;\n"]}},"error":null,"hash":"28aa4060c5ab90727747a85bd45f8db6","cacheData":{"env":{}}}