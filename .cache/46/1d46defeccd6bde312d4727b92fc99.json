{"id":"../node_modules/aws-amplify-react/dist/Storage/S3Album.js","dependencies":[{"name":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Storage/S3Album.js.map","includedInParent":true,"mtime":1552220008284},{"name":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/src/Storage/S3Album.js","includedInParent":true,"mtime":1552220008284},{"name":"/home/pronoob/Desktop/SandBox/ReactSandBox/package.json","includedInParent":true,"mtime":1552220018357},{"name":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/package.json","includedInParent":true,"mtime":1552220008284},{"name":"react","loc":{"line":26,"column":22},"parent":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Storage/S3Album.js","resolved":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/react/index.js"},{"name":"@aws-amplify/core","loc":{"line":27,"column":21},"parent":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Storage/S3Album.js","resolved":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/@aws-amplify/core/lib/index.js"},{"name":"@aws-amplify/storage","loc":{"line":28,"column":24},"parent":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Storage/S3Album.js","resolved":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/@aws-amplify/storage/lib/index.js"},{"name":"../Widget/Picker","loc":{"line":29,"column":23},"parent":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Storage/S3Album.js","resolved":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Widget/Picker.js"},{"name":"../AmplifyTheme","loc":{"line":30,"column":29},"parent":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Storage/S3Album.js","resolved":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/AmplifyTheme.js"},{"name":"./S3Image","loc":{"line":31,"column":24},"parent":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Storage/S3Album.js","resolved":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Storage/S3Image.js"},{"name":"./S3Text","loc":{"line":32,"column":23},"parent":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Storage/S3Album.js","resolved":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Storage/S3Text.js"}],"generated":{"js":"\"use strict\";\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar react_1 = require(\"react\");\nvar core_1 = require(\"@aws-amplify/core\");\nvar storage_1 = require(\"@aws-amplify/storage\");\nvar Picker_1 = require(\"../Widget/Picker\");\nvar AmplifyTheme_1 = require(\"../AmplifyTheme\");\nvar S3Image_1 = require(\"./S3Image\");\nvar S3Text_1 = require(\"./S3Text\");\nvar logger = new core_1.ConsoleLogger('Storage.S3Album');\nvar S3Album = /** @class */ (function (_super) {\n    __extends(S3Album, _super);\n    function S3Album(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handlePick = _this.handlePick.bind(_this);\n        _this.handleClick = _this.handleClick.bind(_this);\n        _this.list = _this.list.bind(_this);\n        _this.marshal = _this.marshal.bind(_this);\n        var theme = _this.props.theme || AmplifyTheme_1.default;\n        _this.state = {\n            theme: theme,\n            items: [],\n            ts: new Date().getTime()\n        };\n        core_1.Hub.listen('window', _this, 'S3Album');\n        return _this;\n    }\n    S3Album.prototype.getKey = function (file) {\n        var fileToKey = this.props.fileToKey;\n        var name = file.name, size = file.size, type = file.type;\n        var key = encodeURI(name);\n        if (fileToKey) {\n            var callback_type = typeof fileToKey;\n            if (callback_type === 'string') {\n                key = fileToKey;\n            }\n            else if (callback_type === 'function') {\n                key = fileToKey({ name: name, size: size, type: type });\n            }\n            else {\n                key = encodeURI(JSON.stringify(fileToKey));\n            }\n            if (!key) {\n                logger.debug('key is empty');\n                key = 'empty_key';\n            }\n        }\n        return key.replace(/\\s/g, '_');\n    };\n    S3Album.prototype.handlePick = function (data) {\n        var _this = this;\n        var _a = this.props, onPick = _a.onPick, onLoad = _a.onLoad, onError = _a.onError, track = _a.track, level = _a.level;\n        if (onPick) {\n            onPick(data);\n        }\n        var path = this.props.path || '';\n        var file = data.file, name = data.name, size = data.size, type = data.type;\n        var key = path + this.getKey(data);\n        if (!storage_1.default || typeof storage_1.default.put !== 'function') {\n            throw new Error('No Storage module found, please ensure @aws-amplify/storage is imported');\n        }\n        storage_1.default.put(key, file, {\n            level: level ? level : 'public',\n            contentType: type,\n            track: track\n        })\n            .then(function (data) {\n            logger.debug('handle pick data', data);\n            var items = _this.state.items;\n            if (items.filter(function (item) { return item.key === key; }).length === 0) {\n                var list = items.concat(data);\n                _this.marshal(list);\n            }\n            else {\n                logger.debug('update an item');\n            }\n            if (onLoad) {\n                onLoad(data);\n            }\n        })\n            .catch(function (err) {\n            logger.debug('handle pick error', err);\n            if (onError) {\n                onError(err);\n            }\n        });\n        this.setState({ ts: new Date().getTime() });\n    };\n    S3Album.prototype.handleClick = function (item) {\n        var _a = this.props, onClickItem = _a.onClickItem, select = _a.select, onSelect = _a.onSelect;\n        if (onClickItem) {\n            onClickItem(item);\n        }\n        if (!select) {\n            return;\n        }\n        item.selected = !item.selected;\n        this.setState({ items: this.state.items.slice() });\n        if (!onSelect) {\n            return;\n        }\n        var selected_items = this.state.items.filter(function (item) { return item.selected; });\n        onSelect(item, selected_items);\n    };\n    S3Album.prototype.onHubCapsule = function (capsule) {\n        var theme = this.props.theme || AmplifyTheme_1.default;\n        this.setState({ theme: Object.assign({}, theme) });\n    };\n    S3Album.prototype.componentDidMount = function () {\n        this.list();\n    };\n    S3Album.prototype.componentDidUpdate = function (prevProps, prevState) {\n        if (this.props.path === prevProps.path &&\n            this.props.ts === prevProps.ts &&\n            this.props.select === prevProps.select) {\n            return;\n        }\n        if (!this.props.select) {\n            this.state.items.forEach(function (item) { return item.selected = false; });\n        }\n        if (this.props.onSelect) {\n            this.props.onSelect(null, []);\n        }\n        this.list();\n    };\n    S3Album.prototype.list = function () {\n        var _this = this;\n        var _a = this.props, path = _a.path, level = _a.level, track = _a.track, identityId = _a.identityId;\n        logger.debug('Album path: ' + path);\n        if (!storage_1.default || typeof storage_1.default.list !== 'function') {\n            throw new Error('No Storage module found, please ensure @aws-amplify/storage is imported');\n        }\n        return storage_1.default.list(path, { level: level ? level : 'public', track: track, identityId: identityId })\n            .then(function (data) {\n            logger.debug('album list', data);\n            _this.marshal(data);\n        })\n            .catch(function (err) {\n            logger.warn(err);\n            return [];\n        });\n    };\n    S3Album.prototype.contentType = function (item) {\n        return core_1.JS.filenameToContentType(item.key, 'image/*');\n    };\n    S3Album.prototype.marshal = function (list) {\n        var _this = this;\n        var contentType = this.props.contentType || '';\n        list.forEach(function (item) {\n            if (item.contentType) {\n                return;\n            }\n            var isString = typeof contentType === 'string';\n            item.contentType = isString ? contentType : contentType(item);\n            if (!item.contentType) {\n                item.contentType = _this.contentType(item);\n            }\n        });\n        var items = this.filter(list);\n        items = this.sort(items);\n        this.setState({ items: items });\n    };\n    S3Album.prototype.filter = function (list) {\n        var filter = this.props.filter;\n        return filter ? filter(list) : list;\n    };\n    S3Album.prototype.sort = function (list) {\n        var sort = this.props.sort;\n        var typeof_sort = typeof sort;\n        if (typeof_sort === 'function') {\n            return sort(list);\n        }\n        if (['string', 'undefined'].includes(typeof_sort)) {\n            var sort_str = sort ? sort : 'lastModified';\n            var parts = sort_str.split(/\\s+/);\n            var field = parts[0];\n            var dir = parts.length > 1 ? parts[1] : '';\n            if (field === 'lastModified') {\n                dir = (dir === 'asc') ? 'asc' : 'desc';\n            }\n            else {\n                dir = (dir === 'desc') ? 'desc' : 'asc';\n            }\n            core_1.JS.sortByField(list, field, dir);\n            return list;\n        }\n        logger.warn('invalid sort. done nothing. should be a string or function');\n        return list;\n    };\n    S3Album.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, picker = _a.picker, translateItem = _a.translateItem, level = _a.level, identityId = _a.identityId;\n        var _b = this.state, items = _b.items, ts = _b.ts;\n        var pickerTitle = this.props.pickerTitle || 'Pick';\n        var theme = this.props.theme || AmplifyTheme_1.default;\n        var list = items.map(function (item) {\n            var isText = item.contentType && core_1.JS.isTextFile(item.contentType);\n            return isText ? React.createElement(S3Text_1.default, { key: item.key, textKey: item.key, theme: theme, style: theme.albumText, selected: item.selected, translate: translateItem, level: level, identityId: identityId, onClick: function () { return _this.handleClick(item); } })\n                : React.createElement(S3Image_1.default, { key: item.key, imgKey: item.key, theme: theme, style: theme.albumPhoto, selected: item.selected, translate: translateItem, level: level, identityId: identityId, onClick: function () { return _this.handleClick(item); } });\n        });\n        return (React.createElement(\"div\", null,\n            React.createElement(\"div\", { style: theme.album }, list),\n            picker ? React.createElement(Picker_1.default, { key: ts, title: pickerTitle, accept: \"image/*, text/*\", onPick: this.handlePick, theme: theme })\n                : null));\n    };\n    return S3Album;\n}(react_1.Component));\nexports.default = S3Album;\n"},"sourceMaps":{"js":{"version":3,"file":"S3Album.js","sourceRoot":"","sources":["../../src/Storage/S3Album.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { Component } from 'react';\n\nimport { JS, ConsoleLogger as Logger, Hub } from '@aws-amplify/core';\nimport Storage from '@aws-amplify/storage';\n\nimport Picker from '../Widget/Picker';\nimport AmplifyTheme from '../AmplifyTheme';\nimport S3Image from './S3Image';\nimport S3Text from './S3Text';\nimport { calcKey } from './Common';\n\nconst logger = new Logger('Storage.S3Album');\n\nexport default class S3Album extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handlePick = this.handlePick.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.list = this.list.bind(this);\n        this.marshal = this.marshal.bind(this);\n\n        const theme = this.props.theme || AmplifyTheme;\n        this.state = {\n            theme,\n            items: [],\n            ts: new Date().getTime()\n        };\n\n        Hub.listen('window', this, 'S3Album');\n    }\n\n    getKey(file) {\n        const { fileToKey } = this.props;\n\n        const { name, size, type } = file;\n        let key = encodeURI(name);\n        if (fileToKey) {\n            const callback_type = typeof fileToKey;\n            if (callback_type === 'string') {\n                key = fileToKey;\n            } else if (callback_type === 'function') {\n                key = fileToKey({ name, size, type });\n            } else {\n                key = encodeURI(JSON.stringify(fileToKey));\n            }\n            if (!key) {\n                logger.debug('key is empty');\n                key = 'empty_key';\n            }\n        }\n\n        return key.replace(/\\s/g, '_');\n    }\n\n    handlePick(data) {\n        const { onPick, onLoad, onError, track, level } = this.props;\n\n        if (onPick) { onPick(data); }\n\n        const path = this.props.path || '';\n        const { file, name, size, type } = data;\n        const key = path + this.getKey(data);\n        if (!Storage || typeof Storage.put !== 'function') {\n            throw new Error('No Storage module found, please ensure @aws-amplify/storage is imported');\n        }\n\n        Storage.put(key, file, {\n            level: level? level: 'public',\n            contentType: type,\n            track\n        })\n            .then(data => {\n                logger.debug('handle pick data', data);\n                const { items } = this.state;\n                if (items.filter(item => item.key === key).length === 0) {\n                    const list = items.concat(data);\n                    this.marshal(list);\n                } else {\n                    logger.debug('update an item');\n                }\n                if (onLoad) { onLoad(data); }\n            })\n            .catch(err => {\n                logger.debug('handle pick error', err);\n                if (onError) { onError(err); }\n            });\n        this.setState({ ts: new Date().getTime() });\n    }\n\n    handleClick(item) {\n        const { onClickItem, select, onSelect } = this.props;\n        if (onClickItem) { onClickItem(item); }\n\n        if (!select) { return; }\n\n        item.selected = !item.selected;\n        this.setState({ items: this.state.items.slice() });\n\n        if (!onSelect) { return; }\n\n        const selected_items = this.state.items.filter(item => item.selected);\n        onSelect(item, selected_items);\n    }\n\n    onHubCapsule(capsule) {\n        const theme = this.props.theme || AmplifyTheme;\n        this.setState({ theme: Object.assign({}, theme) });\n    }\n\n    componentDidMount() {\n        this.list();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.path === prevProps.path &&\n            this.props.ts === prevProps.ts &&\n            this.props.select === prevProps.select\n        ) {\n            return;\n        }\n\n        if (!this.props.select) {\n            this.state.items.forEach(item => item.selected = false);\n        }\n        if (this.props.onSelect) {\n            this.props.onSelect(null, []);\n        }\n\n        this.list();\n    }\n\n    list() {\n        const { path, level, track, identityId } = this.props;\n        logger.debug('Album path: ' + path);\n        if (!Storage || typeof Storage.list !== 'function') {\n            throw new Error('No Storage module found, please ensure @aws-amplify/storage is imported');\n        }\n        return Storage.list(path, { level: level? level : 'public', track, identityId })\n            .then(data => {\n                logger.debug('album list', data);\n                this.marshal(data);\n            })\n            .catch(err => {\n                logger.warn(err);\n                return [];\n            });\n    }\n\n    contentType(item) {\n        return JS.filenameToContentType(item.key, 'image/*');\n    }\n\n    marshal(list) {\n        const contentType = this.props.contentType || '';\n        list.forEach(item => {\n            if (item.contentType) { return; }\n            const isString = typeof contentType === 'string';\n            item.contentType = isString? contentType : contentType(item);\n            if (!item.contentType) { item.contentType = this.contentType(item); }\n        });\n\n        let items = this.filter(list);\n        items = this.sort(items);\n        this.setState({ items });\n    }\n\n    filter(list) {\n        const { filter } = this.props;\n        return filter? filter(list) : list;\n    }\n\n    sort(list) {\n        const { sort } = this.props;\n        const typeof_sort = typeof sort;\n        if (typeof_sort === 'function') { return sort(list); }\n\n        if (['string', 'undefined'].includes(typeof_sort)) {\n            const sort_str = sort? sort : 'lastModified';\n            const parts = sort_str.split(/\\s+/);\n            const field = parts[0];\n            let dir = parts.length > 1? parts[1] : '';\n            if (field === 'lastModified') {\n                dir = (dir === 'asc')? 'asc' : 'desc';\n            } else {\n                dir = (dir === 'desc')? 'desc' : 'asc';\n            }\n            JS.sortByField(list, field, dir);\n\n            return list;\n        }\n\n        logger.warn('invalid sort. done nothing. should be a string or function');\n        return list;\n    }\n\n    render() {\n        const { picker, translateItem, level, identityId } = this.props;\n        const { items, ts } = this.state;\n\n        const pickerTitle = this.props.pickerTitle || 'Pick';\n\n        const theme = this.props.theme || AmplifyTheme;\n\n        const list = items.map(item => {\n            const isText = item.contentType && JS.isTextFile(item.contentType);\n            return isText ? <S3Text\n                             key={item.key}\n                             textKey={item.key}\n                             theme={theme}\n                             style={theme.albumText}\n                             selected={item.selected}\n                             translate={translateItem}\n                             level={level}\n                             identityId={identityId}\n                             onClick={() => this.handleClick(item)}\n                           />\n                         : <S3Image\n                             key={item.key}\n                             imgKey={item.key}\n                             theme={theme}\n                             style={theme.albumPhoto}\n                             selected={item.selected}\n                             translate={translateItem}\n                             level={level}\n                             identityId={identityId}\n                             onClick={() => this.handleClick(item)}\n                           />;\n        });\n        return (\n            <div>\n                <div style={theme.album}>\n                    {list}\n                </div>\n                { picker? <Picker\n                            key={ts}\n                            title={pickerTitle}\n                            accept=\"image/*, text/*\"\n                            onPick={this.handlePick}\n                            theme={theme}\n                          />\n                        : null\n                }\n            </div>\n        );\n    }\n}\n"]}},"error":null,"hash":"2de6d6a71f2a21cdb0ffbfe4322fd8aa","cacheData":{"env":{}}}