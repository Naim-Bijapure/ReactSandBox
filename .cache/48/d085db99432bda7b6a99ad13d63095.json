{"id":"../node_modules/@aws-amplify/auth/lib/types/Auth.js","dependencies":[{"name":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/@aws-amplify/auth/lib/types/Auth.js.map","includedInParent":true,"mtime":1552201916263},{"name":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/@aws-amplify/auth/src/types/Auth.ts","includedInParent":true,"mtime":1552201916263},{"name":"/home/pronoob/Desktop/SandBox/ReactSandBox/package.json","includedInParent":true,"mtime":1552220018357},{"name":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/@aws-amplify/auth/package.json","includedInParent":true,"mtime":1552201916263}],"generated":{"js":"\"use strict\";\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isUsernamePasswordOpts(obj) {\n    return !!obj.username;\n}\nexports.isUsernamePasswordOpts = isUsernamePasswordOpts;\n"},"sourceMaps":{"js":{"version":3,"file":"Auth.js","sourceRoot":"","sources":["../../src/types/Auth.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;GAWG;;AAqGH,gCAAuC,GAAQ;IAC3C,OAAO,CAAC,CAAE,GAA4B,CAAC,QAAQ,CAAC;AACpD,CAAC;AAFD,wDAEC","sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n import { ICookieStorageData, ICognitoStorage, CognitoUserAttribute } from \"amazon-cognito-identity-js\";\n\n/**\n* Parameters for user sign up\n*/\nexport interface SignUpParams {\n    username: string,\n    password: string,\n    attributes?: object,\n    validationData?: CognitoUserAttribute[],\n}\n\nexport interface AuthCache {\n    setItem(),\n    getItem(),\n    removeItem()\n}\n\n/**\n * Auth instance options\n */\nexport interface AuthOptions {\n    userPoolId: string,\n    userPoolWebClientId: string,\n    identityPoolId?: string,\n    region?: string,\n    mandatorySignIn?: boolean\n    cookieStorage?: ICookieStorageData,\n    oauth?: OAuth,\n    refreshHandlers?: object,\n    storage?: ICognitoStorage,\n    authenticationFlowType?: string,\n    identityPoolRegion?: string\n}\n\n/**\n * Details for multi-factor authentication\n */\nexport interface MfaRequiredDetails {\n    challengeName: any,\n    challengeParameters: any\n}\n\n/**\n * interface for federatedResponse\n */\nexport interface FederatedResponse {\n    // access token\n    token: string,\n    // identity id\n    identity_id?: string,\n    // the universal time when token expired\n    expires_at: number\n}\n\n/**\n * interface for federatedUser\n */\nexport interface FederatedUser {\n    name: string,\n    email?: string\n}\n\nexport interface awsCognitoOAuthOpts {\n    domain: string,\n\tscope: Array<string>,\n\tredirectSignIn: string,\n\tredirectSignOut: string,\n    responseType: string,\n    options?: object,\n    urlOpener?: (url:string, redirectUrl: string) => Promise<any>\n}\n\nexport interface OAuth {\n    awsCognito?: awsCognitoOAuthOpts,\n    auth0?: any\n}\n\nexport interface ConfirmSignUpOptions {\n    forceAliasCreation?: boolean\n}\n\nexport interface SignOutOpts {\n    global?: boolean\n}\n\nexport interface CurrentUserOpts {\n    bypassCache: boolean\n}\n\nexport type UsernamePasswordOpts = {\n    username: string,\n    password: string,\n    validationData?: {[key:string]: any}\n};\n\n// We can extend this in the future if needed\nexport type SignInOpts = UsernamePasswordOpts;\n\nexport function isUsernamePasswordOpts(obj: any): obj is UsernamePasswordOpts {\n    return !!(obj as UsernamePasswordOpts).username;\n}\n"]}},"error":null,"hash":"fc6f02a00ee9355583c69d16dc28ec06","cacheData":{"env":{}}}