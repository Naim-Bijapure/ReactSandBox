{"id":"../node_modules/aws-amplify-react/dist/Auth/SignUp.js","dependencies":[{"name":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Auth/SignUp.js.map","includedInParent":true,"mtime":1552220008284},{"name":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/src/Auth/SignUp.jsx","includedInParent":true,"mtime":1552220008284},{"name":"/home/pronoob/Desktop/SandBox/ReactSandBox/package.json","includedInParent":true,"mtime":1552223257578},{"name":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/package.json","includedInParent":true,"mtime":1552220008284},{"name":"react","loc":{"line":25,"column":20},"parent":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Auth/SignUp.js","resolved":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/react/index.js"},{"name":"@aws-amplify/core","loc":{"line":26,"column":21},"parent":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Auth/SignUp.js","resolved":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/@aws-amplify/core/lib/index.js"},{"name":"@aws-amplify/auth","loc":{"line":27,"column":21},"parent":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Auth/SignUp.js","resolved":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/@aws-amplify/auth/lib/index.js"},{"name":"./AuthPiece","loc":{"line":28,"column":26},"parent":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Auth/SignUp.js","resolved":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Auth/AuthPiece.js"},{"name":"../Amplify-UI/Amplify-UI-Components-React","loc":{"line":29,"column":44},"parent":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Auth/SignUp.js","resolved":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Amplify-UI/Amplify-UI-Components-React.js"},{"name":"./common/country-dial-codes.js","loc":{"line":30,"column":38},"parent":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Auth/SignUp.js","resolved":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Auth/common/country-dial-codes.js"},{"name":"./common/default-sign-in-fields","loc":{"line":31,"column":39},"parent":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Auth/SignUp.js","resolved":"/home/pronoob/Desktop/SandBox/ReactSandBox/node_modules/aws-amplify-react/dist/Auth/common/default-sign-in-fields.js"}],"generated":{"js":"\"use strict\";\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar core_1 = require(\"@aws-amplify/core\");\nvar auth_1 = require(\"@aws-amplify/auth\");\nvar AuthPiece_1 = require(\"./AuthPiece\");\nvar Amplify_UI_Components_React_1 = require(\"../Amplify-UI/Amplify-UI-Components-React\");\nvar country_dial_codes_js_1 = require(\"./common/country-dial-codes.js\");\nvar default_sign_in_fields_1 = require(\"./common/default-sign-in-fields\");\nvar logger = new core_1.ConsoleLogger('SignUp');\nvar SignUp = /** @class */ (function (_super) {\n    __extends(SignUp, _super);\n    function SignUp(props) {\n        var _this = _super.call(this, props) || this;\n        _this._validAuthStates = ['signUp'];\n        _this.signUp = _this.signUp.bind(_this);\n        _this.sortFields = _this.sortFields.bind(_this);\n        _this.getDefaultDialCode = _this.getDefaultDialCode.bind(_this);\n        _this.checkCustomSignUpFields = _this.checkCustomSignUpFields.bind(_this);\n        _this.defaultSignUpFields = default_sign_in_fields_1.default;\n        _this.needPrefix = _this.needPrefix.bind(_this);\n        _this.header = (_this.props &&\n            _this.props.signUpConfig &&\n            _this.props.signUpConfig.header) ? _this.props.signUpConfig.header : 'Create a new account';\n        return _this;\n    }\n    SignUp.prototype.validate = function () {\n        var _this = this;\n        var invalids = [];\n        this.signUpFields.map(function (el) {\n            if (el.key !== 'phone_number') {\n                if (el.required && !_this.inputs[el.key]) {\n                    el.invalid = true;\n                    invalids.push(el.label);\n                }\n                else {\n                    el.invalid = false;\n                }\n            }\n            else {\n                if (el.required && (!_this.inputs.dial_code || !_this.inputs.phone_line_number)) {\n                    el.invalid = true;\n                    invalids.push(el.label);\n                }\n                else {\n                    el.invalid = false;\n                }\n            }\n        });\n        return invalids;\n    };\n    SignUp.prototype.sortFields = function () {\n        var _this = this;\n        if (this.props.signUpConfig && this.props.signUpConfig.hiddenDefaults && this.props.signUpConfig.hiddenDefaults.length > 0) {\n            this.defaultSignUpFields = this.defaultSignUpFields.filter(function (d) {\n                return !_this.props.signUpConfig.hiddenDefaults.includes(d.key);\n            });\n        }\n        if (this.checkCustomSignUpFields()) {\n            if (!this.props.signUpConfig || !this.props.signUpConfig.hideAllDefaults) {\n                // see if fields passed to component should override defaults\n                this.defaultSignUpFields.forEach(function (f, i) {\n                    var matchKey = _this.signUpFields.findIndex(function (d) {\n                        return d.key === f.key;\n                    });\n                    if (matchKey === -1) {\n                        _this.signUpFields.push(f);\n                    }\n                });\n            }\n            /*\n              sort fields based on following rules:\n              1. Fields with displayOrder are sorted before those without displayOrder\n              2. Fields with conflicting displayOrder are sorted alphabetically by key\n              3. Fields without displayOrder are sorted alphabetically by key\n            */\n            this.signUpFields.sort(function (a, b) {\n                if (a.displayOrder && b.displayOrder) {\n                    if (a.displayOrder < b.displayOrder) {\n                        return -1;\n                    }\n                    else if (a.displayOrder > b.displayOrder) {\n                        return 1;\n                    }\n                    else {\n                        if (a.key < b.key) {\n                            return -1;\n                        }\n                        else {\n                            return 1;\n                        }\n                    }\n                }\n                else if (!a.displayOrder && b.displayOrder) {\n                    return 1;\n                }\n                else if (a.displayOrder && !b.displayOrder) {\n                    return -1;\n                }\n                else if (!a.displayOrder && !b.displayOrder) {\n                    if (a.key < b.key) {\n                        return -1;\n                    }\n                    else {\n                        return 1;\n                    }\n                }\n            });\n        }\n        else {\n            this.signUpFields = this.defaultSignUpFields;\n        }\n    };\n    SignUp.prototype.needPrefix = function (key) {\n        var field = this.signUpFields.find(function (e) { return e.key === key; });\n        if (key.indexOf('custom:') !== 0) {\n            return field.custom;\n        }\n        else if (key.indexOf('custom:') === 0 && field.custom === false) {\n            logger.warn('Custom prefix prepended to key but custom field flag is set to false; retaining manually entered prefix');\n        }\n        return null;\n    };\n    SignUp.prototype.getDefaultDialCode = function () {\n        return this.props.signUpConfig &&\n            this.props.signUpConfig.defaultCountryCode &&\n            country_dial_codes_js_1.default.indexOf(\"+\" + this.props.signUpConfig.defaultCountryCode) !== '-1' ?\n            \"+\" + this.props.signUpConfig.defaultCountryCode :\n            \"+1\";\n    };\n    SignUp.prototype.checkCustomSignUpFields = function () {\n        return this.props.signUpConfig &&\n            this.props.signUpConfig.signUpFields &&\n            this.props.signUpConfig.signUpFields.length > 0;\n    };\n    SignUp.prototype.signUp = function () {\n        var _this = this;\n        if (!this.inputs.dial_code) {\n            this.inputs.dial_code = this.getDefaultDialCode();\n        }\n        var validation = this.validate();\n        if (validation && validation.length > 0) {\n            return this.error(\"The following fields need to be filled out: \" + validation.join(', '));\n        }\n        if (!auth_1.default || typeof auth_1.default.signUp !== 'function') {\n            throw new Error('No Auth module found, please ensure @aws-amplify/auth is imported');\n        }\n        var signup_info = {\n            username: this.inputs.username,\n            password: this.inputs.password,\n            attributes: {}\n        };\n        var inputKeys = Object.keys(this.inputs);\n        var inputVals = Object.values(this.inputs);\n        inputKeys.forEach(function (key, index) {\n            if (!['username', 'password', 'checkedValue', 'dial_code'].includes(key)) {\n                if (key !== 'phone_line_number' && key !== 'dial_code' && key !== 'error') {\n                    var newKey = \"\" + (_this.needPrefix(key) ? 'custom:' : '') + key;\n                    signup_info.attributes[newKey] = inputVals[index];\n                }\n                else if (inputVals[index]) {\n                    signup_info.attributes['phone_number'] = \"\" + _this.inputs.dial_code + _this.inputs.phone_line_number.replace(/[-()]/g, '');\n                }\n            }\n        });\n        auth_1.default.signUp(signup_info).then(function (data) {\n            _this.changeState('confirmSignUp', data.user.username);\n        })\n            .catch(function (err) { return _this.error(err); });\n    };\n    SignUp.prototype.showComponent = function (theme) {\n        var _this = this;\n        var hide = this.props.hide;\n        if (hide && hide.includes(SignUp)) {\n            return null;\n        }\n        if (this.checkCustomSignUpFields()) {\n            this.signUpFields = this.props.signUpConfig.signUpFields;\n        }\n        this.sortFields();\n        return (React.createElement(Amplify_UI_Components_React_1.FormSection, { theme: theme },\n            React.createElement(Amplify_UI_Components_React_1.SectionHeader, { theme: theme }, core_1.I18n.get(this.header)),\n            React.createElement(Amplify_UI_Components_React_1.SectionBody, { theme: theme }, this.signUpFields.map(function (field) {\n                return field.key !== 'phone_number' ? (React.createElement(Amplify_UI_Components_React_1.FormField, { theme: theme, key: field.key },\n                    field.required ?\n                        React.createElement(Amplify_UI_Components_React_1.InputLabel, { theme: theme },\n                            core_1.I18n.get(field.label),\n                            \" *\") :\n                        React.createElement(Amplify_UI_Components_React_1.InputLabel, { theme: theme }, core_1.I18n.get(field.label)),\n                    React.createElement(Amplify_UI_Components_React_1.Input, { autoFocus: _this.signUpFields.findIndex(function (f) {\n                            return f.key === field.key;\n                        }) === 0 ? true : false, placeholder: core_1.I18n.get(field.placeholder), theme: theme, type: field.type, name: field.key, key: field.key, onChange: _this.handleInputChange }))) : (React.createElement(Amplify_UI_Components_React_1.FormField, { theme: theme, key: \"phone_number\" },\n                    field.required ?\n                        React.createElement(Amplify_UI_Components_React_1.InputLabel, { theme: theme },\n                            core_1.I18n.get(field.label),\n                            \" *\") :\n                        React.createElement(Amplify_UI_Components_React_1.InputLabel, { theme: theme }, core_1.I18n.get(field.label)),\n                    React.createElement(Amplify_UI_Components_React_1.SelectInput, { theme: theme },\n                        React.createElement(\"select\", { name: \"dial_code\", defaultValue: _this.getDefaultDialCode(), onChange: _this.handleInputChange }, country_dial_codes_js_1.default.map(function (dialCode) {\n                            return React.createElement(\"option\", { key: dialCode, value: dialCode }, dialCode);\n                        })),\n                        React.createElement(Amplify_UI_Components_React_1.Input, { placeholder: core_1.I18n.get(field.placeholder), theme: theme, type: \"tel\", id: \"phone_line_number\", key: \"phone_line_number\", name: \"phone_line_number\", onChange: _this.handleInputChange }))));\n            })),\n            React.createElement(Amplify_UI_Components_React_1.SectionFooter, { theme: theme },\n                React.createElement(Amplify_UI_Components_React_1.SectionFooterPrimaryContent, { theme: theme },\n                    React.createElement(Amplify_UI_Components_React_1.Button, { onClick: this.signUp, theme: theme }, core_1.I18n.get('Create Account'))),\n                React.createElement(Amplify_UI_Components_React_1.SectionFooterSecondaryContent, { theme: theme },\n                    core_1.I18n.get('Have an account? '),\n                    React.createElement(Amplify_UI_Components_React_1.Link, { theme: theme, onClick: function () { return _this.changeState('signIn'); } }, core_1.I18n.get('Sign in'))))));\n    };\n    return SignUp;\n}(AuthPiece_1.default));\nexports.default = SignUp;\n"},"sourceMaps":{"js":{"version":3,"file":"SignUp.js","sourceRoot":"","sources":["../../src/Auth/SignUp.jsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport * as React from 'react';\n\nimport { I18n, ConsoleLogger as Logger } from '@aws-amplify/core';\nimport Auth from '@aws-amplify/auth';\n\nimport AuthPiece from './AuthPiece';\nimport {\n    FormSection,\n    SectionHeader,\n    SectionBody,\n    SectionFooter,\n    FormField,\n    Input,\n    InputLabel,\n    SelectInput,\n    Button,\n    Link,\n    SectionFooterPrimaryContent,\n    SectionFooterSecondaryContent,\n} from '../Amplify-UI/Amplify-UI-Components-React';\n\nimport countryDialCodes from './common/country-dial-codes.js';\nimport defaultSignUpFields from './common/default-sign-in-fields'\nimport { valid } from 'semver';\n\nconst logger = new Logger('SignUp');\n\n\nexport default class SignUp extends AuthPiece {\n    constructor(props) {\n        super(props);\n\n        this._validAuthStates = ['signUp'];\n        this.signUp = this.signUp.bind(this);\n        this.sortFields = this.sortFields.bind(this);\n        this.getDefaultDialCode = this.getDefaultDialCode.bind(this);\n        this.checkCustomSignUpFields = this.checkCustomSignUpFields.bind(this);\n        this.defaultSignUpFields = defaultSignUpFields;\n        this.needPrefix = this.needPrefix.bind(this);\n        this.header = (this.props &&\n            this.props.signUpConfig && \n            this.props.signUpConfig.header) ? this.props.signUpConfig.header : 'Create a new account';\n    }\n\n    validate() {\n        const invalids = [];\n        this.signUpFields.map((el) => {\n          if (el.key !== 'phone_number') {\n            if (el.required && !this.inputs[el.key]) {\n              el.invalid = true;\n              invalids.push(el.label);\n            } else {\n              el.invalid = false;\n            }        \n          } else {\n            if (el.required && (!this.inputs.dial_code || !this.inputs.phone_line_number)) {\n              el.invalid = true;\n              invalids.push(el.label);\n            } else {\n              el.invalid = false;\n            }\n          }\n        });\n        return invalids;\n    }\n\n    sortFields() {\n\n        if (this.props.signUpConfig && this.props.signUpConfig.hiddenDefaults && this.props.signUpConfig.hiddenDefaults.length > 0){\n            this.defaultSignUpFields = this.defaultSignUpFields.filter((d) => {\n              return !this.props.signUpConfig.hiddenDefaults.includes(d.key);\n            });\n        }\n\n        if (this.checkCustomSignUpFields()) {\n\n          if (!this.props.signUpConfig || !this.props.signUpConfig.hideAllDefaults) {\n            // see if fields passed to component should override defaults\n            this.defaultSignUpFields.forEach((f, i) => {\n              const matchKey = this.signUpFields.findIndex((d) => {\n                return d.key === f.key;\n              });\n              if (matchKey === -1) {\n                this.signUpFields.push(f);\n              }\n            });\n          }\n    \n          /* \n            sort fields based on following rules:\n            1. Fields with displayOrder are sorted before those without displayOrder\n            2. Fields with conflicting displayOrder are sorted alphabetically by key\n            3. Fields without displayOrder are sorted alphabetically by key\n          */\n          this.signUpFields.sort((a, b) => {\n            if (a.displayOrder && b.displayOrder) {\n              if (a.displayOrder < b.displayOrder) {\n                return -1;\n              } else if (a.displayOrder > b.displayOrder) {\n                return 1;\n              } else {\n                if (a.key < b.key) {\n                  return -1;\n                } else {\n                  return 1;\n                }\n              }\n            } else if (!a.displayOrder && b.displayOrder) {\n              return 1;\n            } else if (a.displayOrder && !b.displayOrder) {\n              return -1;\n            } else if (!a.displayOrder && !b.displayOrder) {\n              if (a.key < b.key) {\n                return -1;\n              } else {\n                return 1;\n              }\n            }\n          });\n        } else {\n          this.signUpFields = this.defaultSignUpFields;\n        }\n    }\n\n    needPrefix(key) {\n        const field = this.signUpFields.find(e => e.key === key);\n        if (key.indexOf('custom:') !== 0) {\n          return field.custom ;\n        } else if (key.indexOf('custom:') === 0 && field.custom === false) {\n            logger.warn('Custom prefix prepended to key but custom field flag is set to false; retaining manually entered prefix');\n          \n        }\n        return null;\n    }\n\n\n    getDefaultDialCode() {\n        return this.props.signUpConfig &&\n        this.props.signUpConfig.defaultCountryCode  &&\n        countryDialCodes.indexOf(`+${this.props.signUpConfig.defaultCountryCode}`) !== '-1' ?\n        `+${this.props.signUpConfig.defaultCountryCode}` :\n        \"+1\"\n    }\n\n    checkCustomSignUpFields() {\n        return this.props.signUpConfig &&\n        this.props.signUpConfig.signUpFields &&\n        this.props.signUpConfig.signUpFields.length > 0\n    }\n\n    signUp() {\n        if (!this.inputs.dial_code) {\n            this.inputs.dial_code = this.getDefaultDialCode();\n        }\n        const validation = this.validate();\n        if (validation && validation.length > 0) {\n          return this.error(`The following fields need to be filled out: ${validation.join(', ')}`);\n        }\n        if (!Auth || typeof Auth.signUp !== 'function') {\n            throw new Error('No Auth module found, please ensure @aws-amplify/auth is imported');\n        }\n\n        let signup_info = {\n            username: this.inputs.username,\n            password: this.inputs.password,\n            attributes: {\n                \n            }\n        };\n\n        const inputKeys = Object.keys(this.inputs);\n        const inputVals = Object.values(this.inputs);\n\n        inputKeys.forEach((key, index) => {\n            if (!['username', 'password', 'checkedValue', 'dial_code'].includes(key)) {\n              if (key !== 'phone_line_number' && key !== 'dial_code' && key !== 'error') {\n                const newKey = `${this.needPrefix(key) ? 'custom:' : ''}${key}`;\n                signup_info.attributes[newKey] = inputVals[index];\n              } else if (inputVals[index]) {\n                  signup_info.attributes['phone_number'] = `${this.inputs.dial_code}${this.inputs.phone_line_number.replace(/[-()]/g, '')}`\n              }\n            }\n        });\n\n        Auth.signUp(signup_info).then((data) => {\n            this.changeState('confirmSignUp', data.user.username)\n        })\n        .catch(err => this.error(err));\n    }\n\n    showComponent(theme) {\n        const { hide } = this.props;\n        if (hide && hide.includes(SignUp)) { return null; }\n        if (this.checkCustomSignUpFields()) {\n            this.signUpFields = this.props.signUpConfig.signUpFields;\n        }\n        this.sortFields();\n        return (\n            <FormSection theme={theme}>\n                <SectionHeader theme={theme}>{I18n.get(this.header)}</SectionHeader>\n                <SectionBody theme={theme}>\n                    {\n                        this.signUpFields.map((field) => {\n                            return field.key !== 'phone_number' ? (\n                                <FormField theme={theme} key={field.key}>\n                                {\n                                    field.required ? \n                                    <InputLabel theme={theme}>{I18n.get(field.label)} *</InputLabel> :\n                                    <InputLabel theme={theme}>{I18n.get(field.label)}</InputLabel>\n                                }\n                                    <Input\n                                        autoFocus={\n                                            this.signUpFields.findIndex((f) => {\n                                                return f.key === field.key\n                                            }) === 0 ? true : false\n                                        }\n                                        placeholder={I18n.get(field.placeholder)}\n                                        theme={theme}\n                                        type={field.type}\n                                        name={field.key}\n                                        key={field.key}\n                                        onChange={this.handleInputChange}\n                                    />\n                                </FormField>\n                            ) : (\n                                <FormField theme={theme} key=\"phone_number\">\n                                    {\n                                        field.required ? \n                                        <InputLabel theme={theme}>{I18n.get(field.label)} *</InputLabel> :\n                                        <InputLabel theme={theme}>{I18n.get(field.label)}</InputLabel>\n                                    }\n                                    <SelectInput theme={theme}>\n                                        <select name=\"dial_code\" defaultValue={this.getDefaultDialCode()} \n                                        onChange={this.handleInputChange}>\n                                            {countryDialCodes.map(dialCode =>\n                                                <option key={dialCode} value={dialCode}>\n                                                    {dialCode}\n                                                </option>\n                                            )}\n                                        </select>\n                                        <Input\n                                            placeholder={I18n.get(field.placeholder)}\n                                            theme={theme}\n                                            type=\"tel\"\n                                            id=\"phone_line_number\"\n                                            key=\"phone_line_number\"\n                                            name=\"phone_line_number\"\n                                            onChange={this.handleInputChange}\n                                        />\n                                    </SelectInput>\n                                </FormField>\n                            )\n                        })\n                    }\n                </SectionBody>\n                <SectionFooter theme={theme}>\n                    <SectionFooterPrimaryContent theme={theme}>\n                        <Button onClick={this.signUp} theme={theme}>\n                            {I18n.get('Create Account')}\n                        </Button>\n                    </SectionFooterPrimaryContent>\n                    <SectionFooterSecondaryContent theme={theme}>\n                        {I18n.get('Have an account? ')}\n                        <Link theme={theme} onClick={() => this.changeState('signIn')}>\n                            {I18n.get('Sign in')}\n                        </Link>\n                    </SectionFooterSecondaryContent>\n                </SectionFooter>\n            </FormSection>\n        );\n    }\n\n}\n"]}},"error":null,"hash":"5f893bcc8b04ac2187d08a7bd898802f","cacheData":{"env":{}}}